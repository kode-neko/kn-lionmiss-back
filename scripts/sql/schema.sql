USE lionmiss;

CREATE TABLE article(
	id CHAR(36) PRIMARY KEY,
	discolor BOOL NOT NULL
);

CREATE TABLE instruct(
	name VARCHAR(25) PRIMARY KEY
);


CREATE TABLE tag(
	name VARCHAR(50) PRIMARY KEY
);

CREATE TABLE article_tag(
	article CHAR(36) NOT NULL,
	tag VARCHAR(25) NOT NULL,
	
	FOREIGN KEY (article) REFERENCES article(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	FOREIGN KEY (tag) REFERENCES tag(name)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(article, tag)
);

CREATE TABLE article_sizes (
	article CHAR(36) NOT NULL,
	size VARCHAR(20) NOT NULL,
	
	FOREIGN KEY (article) REFERENCES article(id) 
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(article, size)
);

CREATE TABLE article_variant(
	id CHAR(36) PRIMARY KEY,
	name VARCHAR(100) NOT NULL
);

CREATE TABLE article_variant_sizes(
	variant CHAR(36),
	size VARCHAR(100) NOT NULL,
	qty INT NOT NULL,

	FOREIGN KEY (variant) REFERENCES article(id) 
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(variant, size)
);

CREATE TABLE article_materials(
	article CHAR(36) NOT NULL,
	material VARCHAR(50) NOT NULL,
	percentage INT(3) NOT NULL,
	
	FOREIGN KEY (article) REFERENCES article(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(article, material)
);

CREATE TABLE article_instruct(
	article CHAR(36) NOT NULL,
	instruct VARCHAR(25) NOT NULL,
  descrip VARCHAR(25) NOT NULL, 
	
	FOREIGN KEY (article) REFERENCES article(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	FOREIGN KEY (instruct) REFERENCES instruct(name)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(article, instruct)
);

CREATE TABLE area(
	id CHAR(36) PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	country VARCHAR(100) NOT NULL,
	symbol VARCHAR(1) NOT NULL
);

CREATE TABLE article_area(
	id CHAR(36) NOT NULL,
	article CHAR(36) NOT NULL,
	title TINYTEXT NOT NULL,
	description TEXT,
	price DECIMAL(6,2) NOT NULL,
	tax DECIMAL(4, 2) NOT NULL,
	area CHAR(36) NOT NULL,
	
	FOREIGN KEY (article) REFERENCES article(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	FOREIGN KEY (area) REFERENCES area(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(id, article, area)
);

CREATE TABLE article_area_variant(
	article CHAR(36) NOT NULL,
	variant VARCHAR(100) NOT NULL,
	translation VARCHAR(100) NOT NULL,
	
	FOREIGN KEY (article) REFERENCES article(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	FOREIGN KEY (variant) REFERENCES article_variant(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(article, variant)
);

CREATE TABLE picture(
	id CHAR(36) PRIMARY KEY,
	ext CHAR(3) NOT NULL,
	src VARCHAR(255) NOT NULL,
	alt VARCHAR(300) NOT NULL
);

CREATE TABLE article_picture(
	article CHAR(36) NOT NULL,
	picture CHAR(36) NOT NULL,

	FOREIGN KEY (article) REFERENCES article(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	FOREIGN KEY (picture) REFERENCES picture(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(article, picture)
);



CREATE TABLE user(
	id CHAR(36) PRIMARY KEY,
	userName VARCHAR(100) UNIQUE NOT NULL,
	pass VARCHAR(250) NOT NULL,
	SALT VARCHAR(250) NOT NULL,
	email VARCHAR(255) NOT NULL,
	bday VARCHAR(255) NOT NULL,
	sex ENUM('female', 'male'),
	area CHAR(36) NOT NULL,
	
	FOREIGN KEY (area) REFERENCES area(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE TABLE comment(
	id CHAR(36) PRIMARY KEY,
	user CHAR(36) NOT NULL,
	article CHAR(36) NOT NULL,
	title TINYTEXT NOT NULL,
	text TEXT NOT NULL,
	rating TINYINT(1) UNSIGNED NOT NULL,
	
	FOREIGN KEY (user) REFERENCES user(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	FOREIGN KEY (article) REFERENCES article(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	UNIQUE(user, article)
);

CREATE TABLE comment_pics(
	comment CHAR(36) NOT NULL,
	picture VARCHAR(50) NOT NULL,

	FOREIGN KEY (comment) REFERENCES comment(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,

	FOREIGN KEY (picture) REFERENCES picture(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(comment, picture)
);

CREATE TABLE address(
	id CHAR(36) PRIMARY KEY,
	user CHAR(36) NOT NULL,
	alias VARCHAR(50) NOT NULL,
	name VARCHAR(100) NOT NULL,
	surname VARCHAR(100) NOT NULL,
	address VARCHAR(150) NOT NULL,
	city VARCHAR(100) NOT NULL,
	state VARCHAR(100) NOT NULL,
	country VARCHAR(100) NOT NULL,
	phone TINYINT(23) UNSIGNED NOT NULL,
	obs TEXT,

	FOREIGN KEY (user) REFERENCES user(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);


CREATE TABLE user_favs(
	user CHAR(36) NOT NULL,
	article CHAR(36) NOT NULL,

	FOREIGN KEY (user) REFERENCES user(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	FOREIGN KEY (article) REFERENCES article(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(user, article)
);

CREATE TABLE measures(
	id CHAR(36) PRIMARY KEY,
	user CHAR(36) NOT NULL,
	shoulder TINYINT(23) UNSIGNED,
	chest TINYINT(23) UNSIGNED,
	waist TINYINT(23) UNSIGNED,
	hips TINYINT(23) UNSIGNED,
	foot TINYINT(23) UNSIGNED,
	height TINYINT(23) UNSIGNED,
	weight TINYINT(23) UNSIGNED,
	unitsHeight ENUM('cm', 'inch'),
	unitsWeight ENUM('kg', 'lb'),

	FOREIGN KEY (user) REFERENCES user(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE TABLE cart(
	id CHAR(36) PRIMARY KEY
);

CREATE TABLE cart_line(
	id TINYINT(3) NOT NULL,
	orderr INT(4) NOT NULL,
	cart CHAR(36) NOT NULL,
	article CHAR(36) NOT NULL,
	qty TINYINT(2) NOT NULL,

	FOREIGN KEY (cart) REFERENCES cart(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	FOREIGN KEY (article) REFERENCES article(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(id, cart)
);

CREATE TABLE shipping(
	id CHAR(36) PRIMARY KEY,
	user CHAR(36) NOT NULL,
	idTracking VARCHAR(36) NOT NULL,
	idPayment VARCHAR(36) NOT NULL,
	payment ENUM('transfer', 'card', 'crypto', 'paypal') NOT NULL,

	FOREIGN KEY (id) REFERENCES user(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE TABLE shipping_state(
	id CHAR(36) NOT NULL,
	shipping CHAR(36) NOT NULL,
	date DATETIME NOT NULL,
	status 
		ENUM(
			'order_recieved', 
			'processing', 
			'shipped', 
			'delivering', 
			'returned',
			'exception'
		) 
		NOT NULL,
	xtra TINYTEXT,
	
	FOREIGN KEY (shipping) REFERENCES shipping(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(id, shipping)
);


CREATE TABLE shipping_line(
	id CHAR(36) NOT NULL,
	orderr INT(4) NOT NULL,
	shipping CHAR(36) NOT NULL,
	article CHAR(36) NOT NULL,
	qty TINYINT(2) NOT NULL,

	FOREIGN KEY (shipping) REFERENCES shipping(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,

	FOREIGN KEY (article) REFERENCES article(id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	PRIMARY KEY(id, shipping)
);
